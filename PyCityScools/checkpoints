PyCity Schools Analysis

As a whole, schools with higher budgets, did not yield better test results. By contrast, schools with higher spending per student actually (
645
−
675
)
u
n
d
e
r
p
e
r
f
o
r
m
e
d
c
o
m
p
a
r
e
d
t
o
s
c
h
o
o
l
s
w
i
t
h
s
m
a
l
l
e
r
b
u
d
g
e
t
s
(
<
585 per student).

As a whole, smaller and medium sized schools dramatically out-performed large sized schools on passing math performances (89-91% passing vs 67%).

As a whole, charter schools out-performed the public district schools across all metrics. However, more analysis will be required to glean if the effect is due to school practices or the fact that charter schools tend to serve smaller student populations per school.

In [243]:
# Note to self --> students_complete.csv has the following fields: Student_Id, Student name, gender, grade, school_name, reading_score 
# and math_score. Number of observations = 39170. 
#schools_complete.csv has the following fields: school_id, school_name, school_type, school_size, school_budget. Number of observations = 15
# The unique identifier in the two datasets is the "school_name"
In [244]:
# Dependencies and Setup
import pandas as pd

# File to Load
school_data_to_load = "Resources/schools_complete.csv"
student_data_to_load = "Resources/students_complete.csv"

# Read School and Student Data File and store into Pandas Data Frames
school_data = pd.read_csv(school_data_to_load)
student_data = pd.read_csv(student_data_to_load)

# Combine the data into a single dataset
school_data_complete = pd.merge(student_data, school_data, how="left", on=["school_name", "school_name"])
school_data_complete
Out[244]:
Student ID	student_name	gender	grade	school_name	reading_score	math_score	School ID	type	size	budget
0	0	Paul Bradley	M	9th	Huang High School	66	79	0	District	2917	1910635
1	1	Victor Smith	M	12th	Huang High School	94	61	0	District	2917	1910635
2	2	Kevin Rodriguez	M	12th	Huang High School	90	60	0	District	2917	1910635
3	3	Dr. Richard Scott	M	12th	Huang High School	67	58	0	District	2917	1910635
4	4	Bonnie Ray	F	9th	Huang High School	97	84	0	District	2917	1910635
5	5	Bryan Miranda	M	9th	Huang High School	94	94	0	District	2917	1910635
6	6	Sheena Carter	F	11th	Huang High School	82	80	0	District	2917	1910635
7	7	Nicole Baker	F	12th	Huang High School	96	69	0	District	2917	1910635
8	8	Michael Roth	M	10th	Huang High School	95	87	0	District	2917	1910635
9	9	Matthew Greene	M	10th	Huang High School	96	84	0	District	2917	1910635
10	10	Andrew Alexander	M	10th	Huang High School	90	70	0	District	2917	1910635
11	11	Daniel Cooper	M	10th	Huang High School	78	77	0	District	2917	1910635
12	12	Brittney Walker	F	9th	Huang High School	64	79	0	District	2917	1910635
13	13	William Long	M	9th	Huang High School	71	79	0	District	2917	1910635
14	14	Tammy Hebert	F	10th	Huang High School	85	67	0	District	2917	1910635
15	15	Dr. Jordan Carson	M	11th	Huang High School	94	88	0	District	2917	1910635
16	16	Donald Zamora	M	9th	Huang High School	88	55	0	District	2917	1910635
17	17	Kimberly Santiago	F	9th	Huang High School	74	75	0	District	2917	1910635
18	18	Kevin Stevens	M	9th	Huang High School	64	69	0	District	2917	1910635
19	19	Brandi Lyons	F	9th	Huang High School	89	80	0	District	2917	1910635
20	20	Lisa Davis	F	10th	Huang High School	91	89	0	District	2917	1910635
21	21	Kristen Lopez	F	10th	Huang High School	90	77	0	District	2917	1910635
22	22	Kimberly Stewart	F	11th	Huang High School	99	84	0	District	2917	1910635
23	23	Christopher Parker	M	9th	Huang High School	81	68	0	District	2917	1910635
24	24	Chelsea Griffith	F	11th	Huang High School	85	73	0	District	2917	1910635
25	25	Cesar Morris	M	9th	Huang High School	92	70	0	District	2917	1910635
26	26	Melanie Decker	F	9th	Huang High School	63	85	0	District	2917	1910635
27	27	Tracey Oconnor	F	10th	Huang High School	80	58	0	District	2917	1910635
28	28	Kelly James	F	11th	Huang High School	73	55	0	District	2917	1910635
29	29	Nicole Brown	F	12th	Huang High School	90	88	0	District	2917	1910635
...	...	...	...	...	...	...	...	...	...	...	...
39140	39140	Cheyenne Hernandez	F	9th	Thomas High School	76	99	14	Charter	1635	1043130
39141	39141	Jonathan Sullivan	M	10th	Thomas High School	86	93	14	Charter	1635	1043130
39142	39142	Deborah Higgins DDS	F	10th	Thomas High School	96	83	14	Charter	1635	1043130
39143	39143	Steven Jackson	M	11th	Thomas High School	71	93	14	Charter	1635	1043130
39144	39144	Cristian Webster	M	12th	Thomas High School	77	87	14	Charter	1635	1043130
39145	39145	Audrey Fry	F	10th	Thomas High School	94	74	14	Charter	1635	1043130
39146	39146	Michael Carroll	M	9th	Thomas High School	69	95	14	Charter	1635	1043130
39147	39147	Raymond Hawkins	M	10th	Thomas High School	88	81	14	Charter	1635	1043130
39148	39148	Christopher Wilson	M	10th	Thomas High School	89	89	14	Charter	1635	1043130
39149	39149	Glenda Fletcher	F	11th	Thomas High School	82	93	14	Charter	1635	1043130
39150	39150	Jennifer Hamilton	F	11th	Thomas High School	80	75	14	Charter	1635	1043130
39151	39151	Shannon Williams	F	10th	Thomas High School	84	73	14	Charter	1635	1043130
39152	39152	Lori Moore	F	9th	Thomas High School	98	84	14	Charter	1635	1043130
39153	39153	William Hubbard	M	9th	Thomas High School	80	75	14	Charter	1635	1043130
39154	39154	Bradley Johnson	M	12th	Thomas High School	91	71	14	Charter	1635	1043130
39155	39155	John Brooks	M	10th	Thomas High School	92	98	14	Charter	1635	1043130
39156	39156	Stephanie Contreras	F	11th	Thomas High School	79	95	14	Charter	1635	1043130
39157	39157	Kristen Gonzalez	F	9th	Thomas High School	79	94	14	Charter	1635	1043130
39158	39158	Kari Holloway	F	10th	Thomas High School	87	90	14	Charter	1635	1043130
39159	39159	Kimberly Cabrera	F	11th	Thomas High School	85	72	14	Charter	1635	1043130
39160	39160	Katie Weaver	F	11th	Thomas High School	89	86	14	Charter	1635	1043130
39161	39161	April Reyes	F	10th	Thomas High School	70	84	14	Charter	1635	1043130
39162	39162	Derek Weeks	M	12th	Thomas High School	94	77	14	Charter	1635	1043130
39163	39163	John Reese	M	11th	Thomas High School	90	75	14	Charter	1635	1043130
39164	39164	Joseph Anthony	M	9th	Thomas High School	97	76	14	Charter	1635	1043130
39165	39165	Donna Howard	F	12th	Thomas High School	99	90	14	Charter	1635	1043130
39166	39166	Dawn Bell	F	10th	Thomas High School	95	70	14	Charter	1635	1043130
39167	39167	Rebecca Tanner	F	9th	Thomas High School	73	84	14	Charter	1635	1043130
39168	39168	Desiree Kidd	F	10th	Thomas High School	99	90	14	Charter	1635	1043130
39169	39169	Carolyn Jackson	F	11th	Thomas High School	95	75	14	Charter	1635	1043130
39170 rows × 11 columns

District Summary

Calculate the total number of schools

Calculate the total number of students

Calculate the total budget

Calculate the average math score

Calculate the average reading score

Calculate the overall passing rate (overall average score), i.e. (avg. math score + avg. reading score)/2

Calculate the percentage of students with a passing math score (70 or greater)

Calculate the percentage of students with a passing reading score (70 or greater)

Create a dataframe to hold the above results

Optional: give the displayed data cleaner formatting

In [245]:
#Calculate the total number of schools
total_number_schools = len(school_data_complete["School ID"].unique())
total_number_schools
Out[245]:
15
In [246]:
#Calculate the total number of students
total_number_students = len(school_data_complete["Student ID"].unique())
total_number_students
Out[246]:
39170
In [247]:
#Calculate the total budget
total_budget = school_data["budget"].sum()
total_budget
Out[247]:
24649428
In [248]:
#Calculate the average math score
average_math_score = student_data["math_score"].mean()
average_math_score
Out[248]:
78.98537145774827
In [249]:
#Calculate the average reading score
average_reading_score = student_data["reading_score"].mean()
average_reading_score
Out[249]:
81.87784018381414
In [250]:
#Calculate the overall passing rate (overall average score), i.e. (avg. math score + avg. reading score)/2
overall_average_score = (average_math_score + average_reading_score)/2
overall_average_score
Out[250]:
80.43160582078121
In [251]:
#Calculate the percentage of students with a passing math score (70 or greater)
#Create 1s  for the passing students by math or reading. 0 otherwise. And take the mean to get the average. It will give the percent of the passing students.
student_data["#passing_math"] = student_data["math_score"] >= 70
student_data["#passing_reading"] = student_data["reading_score"] >= 70
percent_passing_math = ((student_data["#passing_math"]).mean())*100
percent_passing_math
Out[251]:
74.9808526933878
In [252]:
#Calculate the percentage of students with a passing reading score (70 or greater)
percent_passing_reading = ((student_data["#passing_reading"]).mean())*100
percent_passing_reading
Out[252]:
85.80546336482001
In [253]:
#Calculate overall percentage
overall_passing_rate = (percent_passing_math + percent_passing_reading)/2
overall_passing_rate
Out[253]:
80.39315802910392
In [254]:
#Create a dataframe to hold the above results
#Optional: give the displayed data cleaner formatting
district_results = [{"Total Schools": total_number_schools, 
            "Total Students": total_number_students, 
            "Total Budget": total_budget, 
            "Average Math Score":  round(average_math_score,2), 
            "Average Reading Score":  round(average_reading_score,2), 
           "% Passing Math": round(percent_passing_math,2),
           "% Passing Reading": round(percent_passing_reading,2),
            "% Overall Passing Rate": round(overall_passing_rate,2)}]
district_summary_table = pd.DataFrame(district_results)

#Formatting
district_summary_table["% Passing Math"] = district_summary_table["% Passing Math"].map("{:,.2f}%".format)
district_summary_table["% Passing Reading"] = district_summary_table["% Passing Reading"].map("{:,.2f}%".format)
district_summary_table["% Overall Passing Rate"] = district_summary_table["% Overall Passing Rate"].map("{:,.2f}%".format)
district_summary_table["Total Budget"] = district_summary_table["Total Budget"].map("${:,.2f}".format)
district_summary_table["Total Students"] = district_summary_table["Total Students"].map("{:,}".format)

#Display
district_summary_table
Out[254]:
% Overall Passing Rate	% Passing Math	% Passing Reading	Average Math Score	Average Reading Score	Total Budget	Total Schools	Total Students
0	80.39%	74.98%	85.81%	78.99	81.88	$24,649,428.00	15	39,170
School Summary
Create an overview table that summarizes key metrics about each school, including:

School Name
School Type
Total Students
Total School Budget
Per Student Budget
Average Math Score
Average Reading Score
% Passing Math
% Passing Reading
Overall Passing Rate (Average of the above two)
Create a dataframe to hold the above results

In [255]:
#For this part, school_data_complete

school_data_complete["passing_math"] = school_data_complete["math_score"] >= 70
school_data_complete["passing_reading"] = school_data_complete["reading_score"] >= 70

school_data_complete
Out[255]:
Student ID	student_name	gender	grade	school_name	reading_score	math_score	School ID	type	size	budget	passing_math	passing_reading
0	0	Paul Bradley	M	9th	Huang High School	66	79	0	District	2917	1910635	True	False
1	1	Victor Smith	M	12th	Huang High School	94	61	0	District	2917	1910635	False	True
2	2	Kevin Rodriguez	M	12th	Huang High School	90	60	0	District	2917	1910635	False	True
3	3	Dr. Richard Scott	M	12th	Huang High School	67	58	0	District	2917	1910635	False	False
4	4	Bonnie Ray	F	9th	Huang High School	97	84	0	District	2917	1910635	True	True
5	5	Bryan Miranda	M	9th	Huang High School	94	94	0	District	2917	1910635	True	True
6	6	Sheena Carter	F	11th	Huang High School	82	80	0	District	2917	1910635	True	True
7	7	Nicole Baker	F	12th	Huang High School	96	69	0	District	2917	1910635	False	True
8	8	Michael Roth	M	10th	Huang High School	95	87	0	District	2917	1910635	True	True
9	9	Matthew Greene	M	10th	Huang High School	96	84	0	District	2917	1910635	True	True
10	10	Andrew Alexander	M	10th	Huang High School	90	70	0	District	2917	1910635	True	True
11	11	Daniel Cooper	M	10th	Huang High School	78	77	0	District	2917	1910635	True	True
12	12	Brittney Walker	F	9th	Huang High School	64	79	0	District	2917	1910635	True	False
13	13	William Long	M	9th	Huang High School	71	79	0	District	2917	1910635	True	True
14	14	Tammy Hebert	F	10th	Huang High School	85	67	0	District	2917	1910635	False	True
15	15	Dr. Jordan Carson	M	11th	Huang High School	94	88	0	District	2917	1910635	True	True
16	16	Donald Zamora	M	9th	Huang High School	88	55	0	District	2917	1910635	False	True
17	17	Kimberly Santiago	F	9th	Huang High School	74	75	0	District	2917	1910635	True	True
18	18	Kevin Stevens	M	9th	Huang High School	64	69	0	District	2917	1910635	False	False
19	19	Brandi Lyons	F	9th	Huang High School	89	80	0	District	2917	1910635	True	True
20	20	Lisa Davis	F	10th	Huang High School	91	89	0	District	2917	1910635	True	True
21	21	Kristen Lopez	F	10th	Huang High School	90	77	0	District	2917	1910635	True	True
22	22	Kimberly Stewart	F	11th	Huang High School	99	84	0	District	2917	1910635	True	True
23	23	Christopher Parker	M	9th	Huang High School	81	68	0	District	2917	1910635	False	True
24	24	Chelsea Griffith	F	11th	Huang High School	85	73	0	District	2917	1910635	True	True
25	25	Cesar Morris	M	9th	Huang High School	92	70	0	District	2917	1910635	True	True
26	26	Melanie Decker	F	9th	Huang High School	63	85	0	District	2917	1910635	True	False
27	27	Tracey Oconnor	F	10th	Huang High School	80	58	0	District	2917	1910635	False	True
28	28	Kelly James	F	11th	Huang High School	73	55	0	District	2917	1910635	False	True
29	29	Nicole Brown	F	12th	Huang High School	90	88	0	District	2917	1910635	True	True
...	...	...	...	...	...	...	...	...	...	...	...	...	...
39140	39140	Cheyenne Hernandez	F	9th	Thomas High School	76	99	14	Charter	1635	1043130	True	True
39141	39141	Jonathan Sullivan	M	10th	Thomas High School	86	93	14	Charter	1635	1043130	True	True
39142	39142	Deborah Higgins DDS	F	10th	Thomas High School	96	83	14	Charter	1635	1043130	True	True
39143	39143	Steven Jackson	M	11th	Thomas High School	71	93	14	Charter	1635	1043130	True	True
39144	39144	Cristian Webster	M	12th	Thomas High School	77	87	14	Charter	1635	1043130	True	True
39145	39145	Audrey Fry	F	10th	Thomas High School	94	74	14	Charter	1635	1043130	True	True
39146	39146	Michael Carroll	M	9th	Thomas High School	69	95	14	Charter	1635	1043130	True	False
39147	39147	Raymond Hawkins	M	10th	Thomas High School	88	81	14	Charter	1635	1043130	True	True
39148	39148	Christopher Wilson	M	10th	Thomas High School	89	89	14	Charter	1635	1043130	True	True
39149	39149	Glenda Fletcher	F	11th	Thomas High School	82	93	14	Charter	1635	1043130	True	True
39150	39150	Jennifer Hamilton	F	11th	Thomas High School	80	75	14	Charter	1635	1043130	True	True
39151	39151	Shannon Williams	F	10th	Thomas High School	84	73	14	Charter	1635	1043130	True	True
39152	39152	Lori Moore	F	9th	Thomas High School	98	84	14	Charter	1635	1043130	True	True
39153	39153	William Hubbard	M	9th	Thomas High School	80	75	14	Charter	1635	1043130	True	True
39154	39154	Bradley Johnson	M	12th	Thomas High School	91	71	14	Charter	1635	1043130	True	True
39155	39155	John Brooks	M	10th	Thomas High School	92	98	14	Charter	1635	1043130	True	True
39156	39156	Stephanie Contreras	F	11th	Thomas High School	79	95	14	Charter	1635	1043130	True	True
39157	39157	Kristen Gonzalez	F	9th	Thomas High School	79	94	14	Charter	1635	1043130	True	True
39158	39158	Kari Holloway	F	10th	Thomas High School	87	90	14	Charter	1635	1043130	True	True
39159	39159	Kimberly Cabrera	F	11th	Thomas High School	85	72	14	Charter	1635	1043130	True	True
39160	39160	Katie Weaver	F	11th	Thomas High School	89	86	14	Charter	1635	1043130	True	True
39161	39161	April Reyes	F	10th	Thomas High School	70	84	14	Charter	1635	1043130	True	True
39162	39162	Derek Weeks	M	12th	Thomas High School	94	77	14	Charter	1635	1043130	True	True
39163	39163	John Reese	M	11th	Thomas High School	90	75	14	Charter	1635	1043130	True	True
39164	39164	Joseph Anthony	M	9th	Thomas High School	97	76	14	Charter	1635	1043130	True	True
39165	39165	Donna Howard	F	12th	Thomas High School	99	90	14	Charter	1635	1043130	True	True
39166	39166	Dawn Bell	F	10th	Thomas High School	95	70	14	Charter	1635	1043130	True	True
39167	39167	Rebecca Tanner	F	9th	Thomas High School	73	84	14	Charter	1635	1043130	True	True
39168	39168	Desiree Kidd	F	10th	Thomas High School	99	90	14	Charter	1635	1043130	True	True
39169	39169	Carolyn Jackson	F	11th	Thomas High School	95	75	14	Charter	1635	1043130	True	True
39170 rows × 13 columns

In [256]:
# Use groupby by school_name

school_group = school_data_complete.groupby(["school_name"]).mean()
school_group["Per Student Budget"] = school_group["budget"]/school_group["size"]
school_group["% Passing Math"] = round(school_group["passing_math"]*100,2)
school_group["% Passing Reading"] = round(school_group["passing_reading"]*100,2)
school_group["% Overall Passing Rate"] = round(((school_group["passing_math"] + school_group["passing_reading"])/2)*100,3)

#Merge with school_data to collect information about the type, size and budget
school_data_summary = pd.merge(school_group, school_data, how="left", on=["school_name", "school_name"])
del school_data_summary['size_y']
del school_data_summary['budget_y']
del school_data_summary['Student ID']
del school_data_summary['School ID_x']

#Create a dataframe to store the results
school_summary_dataframe = pd.DataFrame({"School Name":  school_data_summary["school_name"],
                                "School Type": school_data_summary["type"],
                               "Total Students":school_data_summary["size_x"],
                               "Total School Budget": school_data_summary["budget_x"],
                               "Per Student Budget":school_data_summary["Per Student Budget"], 
                               "Average Math Score":round(school_data_summary["math_score"],2),
                               "Average Reading Score":round(school_data_summary["reading_score"],2), 
                               "% Passing Math": school_data_summary["% Passing Math"],
                               "% Passing Reading": school_data_summary["% Passing Reading"],
                               "% Overall Passing Rate": school_data_summary["% Overall Passing Rate"]}) 

#Formatting
school_summary_dataframe["Total Students"] = school_summary_dataframe["Total Students"].map("{:,.0f}".format)
school_summary_dataframe["Total School Budget"] = school_summary_dataframe["Total School Budget"].map("${:,.2f}".format)
school_summary_dataframe["Per Student Budget"] = school_summary_dataframe["Per Student Budget"].map("${:,.2f}".format)
#Display
school_summary_dataframe
Out[256]:
School Name	School Type	Total Students	Total School Budget	Per Student Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
0	Bailey High School	District	4,976	$3,124,928.00	$628.00	77.05	81.03	66.68	81.93	74.307
1	Cabrera High School	Charter	1,858	$1,081,356.00	$582.00	83.06	83.98	94.13	97.04	95.587
2	Figueroa High School	District	2,949	$1,884,411.00	$639.00	76.71	81.16	65.99	80.74	73.364
3	Ford High School	District	2,739	$1,763,916.00	$644.00	77.10	80.75	68.31	79.30	73.804
4	Griffin High School	Charter	1,468	$917,500.00	$625.00	83.35	83.82	93.39	97.14	95.266
5	Hernandez High School	District	4,635	$3,022,020.00	$652.00	77.29	80.93	66.75	80.86	73.808
6	Holden High School	Charter	427	$248,087.00	$581.00	83.80	83.81	92.51	96.25	94.379
7	Huang High School	District	2,917	$1,910,635.00	$655.00	76.63	81.18	65.68	81.32	73.500
8	Johnson High School	District	4,761	$3,094,650.00	$650.00	77.07	80.97	66.06	81.22	73.640
9	Pena High School	Charter	962	$585,858.00	$609.00	83.84	84.04	94.59	95.95	95.270
10	Rodriguez High School	District	3,999	$2,547,363.00	$637.00	76.84	80.74	66.37	80.22	73.293
11	Shelton High School	Charter	1,761	$1,056,600.00	$600.00	83.36	83.73	93.87	95.85	94.861
12	Thomas High School	Charter	1,635	$1,043,130.00	$638.00	83.42	83.85	93.27	97.31	95.291
13	Wilson High School	Charter	2,283	$1,319,574.00	$578.00	83.27	83.99	93.87	96.54	95.204
14	Wright High School	Charter	1,800	$1,049,400.00	$583.00	83.68	83.96	93.33	96.61	94.972
Top Performing Schools (By Passing Rate)
Sort and display the top five schools in overall passing rate
In [257]:
#Sort and display the top five schools in overall passing rate

top_five_schools = school_summary_dataframe.sort_values(["% Overall Passing Rate"], ascending=False)
top_five_schools.head()
Out[257]:
School Name	School Type	Total Students	Total School Budget	Per Student Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
1	Cabrera High School	Charter	1,858	$1,081,356.00	$582.00	83.06	83.98	94.13	97.04	95.587
12	Thomas High School	Charter	1,635	$1,043,130.00	$638.00	83.42	83.85	93.27	97.31	95.291
9	Pena High School	Charter	962	$585,858.00	$609.00	83.84	84.04	94.59	95.95	95.270
4	Griffin High School	Charter	1,468	$917,500.00	$625.00	83.35	83.82	93.39	97.14	95.266
13	Wilson High School	Charter	2,283	$1,319,574.00	$578.00	83.27	83.99	93.87	96.54	95.204
Bottom Performing Schools (By Passing Rate)
Sort and display the five worst-performing schools
In [258]:
#Sort and display the five worst-performing schools

bottom_five_schools = school_summary_dataframe.sort_values(["% Overall Passing Rate"], ascending=True)
bottom_five_schools.head()
Out[258]:
School Name	School Type	Total Students	Total School Budget	Per Student Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
10	Rodriguez High School	District	3,999	$2,547,363.00	$637.00	76.84	80.74	66.37	80.22	73.293
2	Figueroa High School	District	2,949	$1,884,411.00	$639.00	76.71	81.16	65.99	80.74	73.364
7	Huang High School	District	2,917	$1,910,635.00	$655.00	76.63	81.18	65.68	81.32	73.500
8	Johnson High School	District	4,761	$3,094,650.00	$650.00	77.07	80.97	66.06	81.22	73.640
3	Ford High School	District	2,739	$1,763,916.00	$644.00	77.10	80.75	68.31	79.30	73.804
Math Scores by Grade
Create a table that lists the average Reading Score for students of each grade level (9th, 10th, 11th, 12th) at each school.

Create a pandas series for each grade. Hint: use a conditional statement.

Group each series by school

Combine the series into a dataframe

Optional: give the displayed data cleaner formatting

In [259]:
#Create a pandas series for each grade. Group each series by school.

nineth_grade=  school_data_complete[school_data_complete["grade"] == "9th"].groupby("school_name").mean()["math_score"]
tenth_grade =  school_data_complete[school_data_complete["grade"] == "10th"].groupby("school_name").mean()["math_score"]
eleventh_grade =  school_data_complete[school_data_complete["grade"] == "11th"].groupby("school_name").mean()["math_score"]
twelveth_grade=  school_data_complete[school_data_complete["grade"] == "12th"].groupby("school_name").mean()["math_score"]

#Combine the series into a dataframe
math_grade_dataframe = pd.DataFrame({"Ninth Grade":nineth_grade, "Tenth Grade":tenth_grade, 
                                     "Eleventh Grade":eleventh_grade, "Twelveth Grade":twelveth_grade})            

#Optional formatting: Give the displayed data cleaner formatting

math_grade_dataframe[["Ninth Grade","Tenth Grade","Eleventh Grade","Twelveth Grade"]] = math_grade_dataframe[["Ninth Grade","Tenth Grade","Eleventh Grade","Twelveth Grade"]].applymap("{:.2f}".format)

#Display

math_grade_dataframe
Out[259]:
Ninth Grade	Tenth Grade	Eleventh Grade	Twelveth Grade
school_name				
Bailey High School	77.08	77.00	77.52	76.49
Cabrera High School	83.09	83.15	82.77	83.28
Figueroa High School	76.40	76.54	76.88	77.15
Ford High School	77.36	77.67	76.92	76.18
Griffin High School	82.04	84.23	83.84	83.36
Hernandez High School	77.44	77.34	77.14	77.19
Holden High School	83.79	83.43	85.00	82.86
Huang High School	77.03	75.91	76.45	77.23
Johnson High School	77.19	76.69	77.49	76.86
Pena High School	83.63	83.37	84.33	84.12
Rodriguez High School	76.86	76.61	76.40	77.69
Shelton High School	83.42	82.92	83.38	83.78
Thomas High School	83.59	83.09	83.50	83.50
Wilson High School	83.09	83.72	83.20	83.04
Wright High School	83.26	84.01	83.84	83.64
Reading Score by Grade
Perform the same operations as above for reading scores
In [260]:
#Perform the same operations as above for reading scores
#Create a pandas series for each grade. Group each series by school.

nineth_grade=  school_data_complete[school_data_complete["grade"] == "9th"].groupby("school_name").mean()["reading_score"]
tenth_grade =  school_data_complete[school_data_complete["grade"] == "10th"].groupby("school_name").mean()["reading_score"]
eleventh_grade =  school_data_complete[school_data_complete["grade"] == "11th"].groupby("school_name").mean()["reading_score"]
twelveth_grade=  school_data_complete[school_data_complete["grade"] == "12th"].groupby("school_name").mean()["reading_score"]

#Combine the series into a dataframe
reading_grade_dataframe = pd.DataFrame({"Ninth Grade":nineth_grade, "Tenth Grade":tenth_grade, 
                                     "Eleventh Grade":eleventh_grade, "Twelveth Grade":twelveth_grade})            

#Optional formatting: Give the displayed data cleaner formatting

reading_grade_dataframe[["Ninth Grade","Tenth Grade","Eleventh Grade","Twelveth Grade"]] = reading_grade_dataframe[["Ninth Grade","Tenth Grade","Eleventh Grade","Twelveth Grade"]].applymap("{:.2f}".format)

#Display

reading_grade_dataframe
Out[260]:
Ninth Grade	Tenth Grade	Eleventh Grade	Twelveth Grade
school_name				
Bailey High School	81.30	80.91	80.95	80.91
Cabrera High School	83.68	84.25	83.79	84.29
Figueroa High School	81.20	81.41	80.64	81.38
Ford High School	80.63	81.26	80.40	80.66
Griffin High School	83.37	83.71	84.29	84.01
Hernandez High School	80.87	80.66	81.40	80.86
Holden High School	83.68	83.32	83.82	84.70
Huang High School	81.29	81.51	81.42	80.31
Johnson High School	81.26	80.77	80.62	81.23
Pena High School	83.81	83.61	84.34	84.59
Rodriguez High School	80.99	80.63	80.86	80.38
Shelton High School	84.12	83.44	84.37	82.78
Thomas High School	83.73	84.25	83.59	83.83
Wilson High School	83.94	84.02	83.76	84.32
Wright High School	83.83	83.81	84.16	84.07
Scores by School Spending
Create a table that breaks down school performances based on average Spending Ranges (Per Student). Use 4 reasonable bins to group school spending. Include in the table each of the following:
Average Math Score
Average Reading Score
% Passing Math
% Passing Reading
Overall Passing Rate (Average of the above two)
In [261]:
# Sample bins. Feel free to create your own bins.
spending_bins = [0, 585, 615, 645, 675]
group_names = ["<$585", "$585-615", "$615-645", "$645-675"]

# Use 4 reasonable bins to group school spending. 
school_data_summary["Spending Ranges (Per Student)"] = pd.cut(school_data_summary["Per Student Budget"], spending_bins, labels=group_names)

school_spending_grouped = school_data_summary.groupby("Spending Ranges (Per Student)").mean() 

#Remove the unwanted columns as per the sample provided
del school_spending_grouped['size_x']
del school_spending_grouped['budget_x']
del school_spending_grouped['Per Student Budget']
del school_spending_grouped['School ID_y']
del school_spending_grouped['passing_math']
del school_spending_grouped['passing_reading']

school_spending_grouped
Out[261]:
reading_score	math_score	% Passing Math	% Passing Reading	% Overall Passing Rate
Spending Ranges (Per Student)					
<$585	83.933814	83.455399	93.460000	96.610000	95.035500
$585-615	83.885211	83.599686	94.230000	95.900000	95.065500
$615-645	81.891436	79.079225	75.668333	86.106667	80.887500
$645-675	81.027843	76.997210	66.163333	81.133333	73.649333
In [ ]:
 
Scores by School Size
Perform the same operations as above, based on school size.
In [262]:
# Sample bins. Feel free to create your own bins.
size_bins = [0, 1000, 2000, 5000]
group_names = ["Small (<1000)", "Medium (1000-2000)", "Large (2000-5000)"]

# Use 4 reasonable bins to group school size. 
school_data_summary["School Size"] = pd.cut(school_data_summary["size_x"], size_bins, labels=group_names)
school_data_summary

#group by size_x
school_size_grouped = school_data_summary.groupby("School Size").mean() 
school_size_grouped

#Remove the unwanted columns as per the sample provided
#del school_size_grouped['size_x']
del school_size_grouped['budget_x']
del school_size_grouped['Per Student Budget']
del school_size_grouped['School ID_y']
del school_size_grouped['passing_math']
del school_size_grouped['passing_reading']

#Display
school_size_grouped
Out[262]:
reading_score	math_score	size_x	% Passing Math	% Passing Reading	% Overall Passing Rate
School Size						
Small (<1000)	83.929843	83.821598	694.500	93.55000	96.10000	94.8245
Medium (1000-2000)	83.864438	83.374684	1704.400	93.59800	96.79000	95.1954
Large (2000-5000)	81.344493	77.746417	3657.375	69.96375	82.76625	76.3650
In [ ]:
 
Scores by School Type
Perform the same operations as above, based on school type.
In [263]:
school_type_grouped = school_data_summary.groupby("type").mean()

#Remove the unwanted columns as per the sample provided
del school_type_grouped['size_x']
del school_type_grouped['budget_x']
del school_type_grouped['Per Student Budget']
del school_type_grouped['School ID_y']
del school_type_grouped['passing_math']
del school_type_grouped['passing_reading']

school_type_grouped
Out[263]:
reading_score	math_score	% Passing Math	% Passing Reading	% Overall Passing Rate
type					
Charter	83.896421	83.473852	93.620000	96.586250	95.103750
District	80.966636	76.956733	66.548571	80.798571	73.673714
In [ ]:
####You must include a written description of at least two observable trends based on the data.
#Observation 1:  Charter schools outperformed the other schools. Overall there is a 95% passing rate (in Math and Reading skills) in the Charter schools, 
#compared to an almost 74% proficiency in the District schools. For both these types of schools, passing students seem to have greater proficiency in Reading than Mathematics.
#Observation 2:  Overall, reading skills are more found to be more enhanced than math skills. This is true irrespetive of the size of the schools, the spending done on the schools
#or the size of the schools(determined by the total number of students). 
#The analysis doesn't have information about some other features that attribute to performances. 
#For example: student-teacher ratio, students IQ, or their socio-economic background or their teachers' educational levels (or teaching experience in years) 
#Such information would help explain why these diffrences exist in the skill sets. 
